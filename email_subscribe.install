<?php
/**
 * Implementation of hook_install()
 */
function email_subscribe_install() {
  
}

/**
 * Implementation of hook_install()
 */
function email_subscribe_uninstall() {

}

/**
 * Implementation of hook_enable()
 */
function email_subscribe_enable() {
  drupal_set_message(t('You need to set email templates for email subscribe module.').l(t('Configuration'), 'admin/config/services/email_subscribe/service').'.');
}

/**
 * Implementation of hook_schema()
 * @return array of Schema API table definitions.
 */
function email_subscribe_schema() {
  $schema['email_subscribe_users'] = array(
    'fields' => array(
      'sid' => array(
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE, 
        'description'=> "Field ID"
      ),
      'email' => array(
        'type' => 'varchar',
        'size' => 'normal',
        'not null' => FALSE,
        'length' => 99, 
        'description'=> "User email"
      ),
      'status' =>  array(
        'type' => 'int',
        'size' => 'small',
        'default' => 0,
        'not null' => TRUE, 
        'description'=> "0-Not signed, 1-Subscribe, but email not confirm, 2-Subscribe, 3-Unsubscribe"
      ),
      'uid' =>  array(
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
        'default' => 0,
        'not null' => TRUE,
        'length' => 10, 
        'description'=> "User ID performed an action"
      ),
      'subs_token' => array(
        'type' => 'varchar',
        'size' => 'normal',
        'not null' => FALSE,
        'length' => 32,
        'description'=> "Token for confirm email(md5)"
      ),
      'unsubs_token' => array(
        'type' => 'varchar',
        'size' => 'normal',
        'not null' => FALSE,
        'length' => 32,
        'description'=> "Token to confirm unsubscribe(md5)"
      ),
      'date_subscribe' => array(
        'type' => 'varchar',
        'mysql_type' => 'datetime',
        'not null' => FALSE,
        'description'=> "Date of when user confirm subscribe"
      ),
      'date_unsubscribe' => array(
        'type' => 'varchar',
        'mysql_type' => 'datetime',
        'not null' => FALSE,
        'description'=> "Date of when user confirm unsubscribe"
      ),
      'date_resubscribe' => array(
        'type' => 'varchar',
        'mysql_type' => 'datetime',
        'not null' => FALSE,
        'description'=> "Date of when user confirm re-subscribe"
      ),
      'datechange' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description'=> "The Unix timestamp the date of change",
      ),
    ),
    'indexes' => array(
      'email'=>array('email'),
      'status'=>array('status')
    ),
    'primary key' => array('sid')
  );
    
  $schema['email_subscribe_readed_nodes'] = array(
    'fields' => array(
      'rn_id' => array(
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE, 
        'description'=> "Field ID"
      ),
      'rn_nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 0,
        'description'=> "Node ID"
      ),
      'rn_sid' =>  array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 0, 
        'description'=> "Subscribe user id"
      ),
      'rn_status' =>  array(
        'type' => 'int',
        'size' => 'small',
        'default' => 0,
        'not null' => TRUE, 
        'description'=> "0-email don't send, 1-email has been sented."
      ),
      'datechange' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description'=> "The Unix timestamp the date of change",
      ),
    ),
    'indexes' => array(
      'rn_nid'=>array('rn_nid'),
      'rn_sid'=>array('rn_sid'),
      'rn_status'=>array('rn_status'),
    ),
    'primary key' => array('rn_id')
  );
  return $schema;
}

/**
 * Change field format 'datechange' from datetime to int.
 */
function email_subscribe_update_7101() {
  $field = array(
    'type' => 'int',
    'size' => 'big',
    'not null' => TRUE,
    'default' => 0,
    'description'=> "The Unix timestamp the date of change",
  );
  db_change_field('email_subscribe_users', 'datechange', 'datechange', $field);
  db_change_field('email_subscribe_readed_nodes', 'datechange', 'datechange', $field);
  
  db_query("UPDATE {email_subscribe_users} SET datechange=UNIX_TIMESTAMP(`datechange`)");
  db_query("UPDATE {email_subscribe_readed_nodes} SET datechange=UNIX_TIMESTAMP(`datechange`)");
  
  $field = array(
    'type' => 'int',
    'size' => 'normal',
    'not null' => TRUE,
    'default' => 0,
    'description'=> "The Unix timestamp the date of change",
  );
  db_change_field('email_subscribe_users', 'datechange', 'datechange', $field);
  db_change_field('email_subscribe_readed_nodes', 'datechange', 'datechange', $field);
}

/**
 * Remove email_subscribe from queue list
 */
function email_subscribe_update_7102() {
  db_delete('queue')->condition('name', 'email_subscribe')->execute();
}

/**
 * 1. Delete data from table "email_subscribe_readed_nodes" for users with unconfirmed emails.
 * 2. Update translation file.
 * 3. Update field "datechange"
 */
function email_subscribe_update_7103() {
  //~ 1.
  $usdel = db_select('email_subscribe_users', 'u')
  ->fields('u', array('sid'))
  ->condition('status', 1)
  ->execute()
  ->fetchAllAssoc('sid');

  if(sizeof($usdel) > 0) {
    $delRN = db_delete('email_subscribe_readed_nodes')
    ->condition('rn_sid', array_keys($usdel), 'IN')
    ->execute();
    
    drupal_set_message(format_plural($delRN, 'Was removed 1 row.', 'Was removed @count rows.').' '.t('For users with not confirmed email, from %table table.', array('%table'=>'email_subscribe_readed_nodes')), 'warning');
  }
  
  //~ 2.
  if (module_exists('locale')) {
    locale_system_update(array('email_subscribe'));
  }
  
  //~ 3.
  db_update('email_subscribe_users')
  ->fields(array('datechange'=>REQUEST_TIME))
  ->condition('datechange', 0)
  ->execute();
  
  db_update('email_subscribe_readed_nodes')
  ->fields(array('datechange'=>REQUEST_TIME))
  ->condition('datechange', 0)
  ->execute();
}

/**
 * Delete records with subsribe_user_id(rn_sid) = 0 from the {email_subscribe_readed_nodes} table.
 * Version 1.0.5.1
 */
function email_subscribe_update_7104() {
  db_delete('email_subscribe_readed_nodes')
  ->condition('rn_sid', 0)
  ->execute();
}

/**
 * Delete records for users with not confirmed email from the {email_subscribe_readed_nodes} table.
 * Version 1.0.5.2
 */
function email_subscribe_update_7105() {
  $usdel = db_select('email_subscribe_users', 'u')
  ->fields('u', array('sid'))
  ->condition('status', 1)
  ->execute()
  ->fetchAllAssoc('sid');

  if(sizeof($usdel) > 0) {
    $delRN = db_delete('email_subscribe_readed_nodes')
    ->condition('rn_sid', array_keys($usdel), 'IN')
    ->execute();
    
    db_query('OPTIMIZE TABLE {email_subscribe_readed_nodes}');
    
    drupal_set_message(format_plural($delRN, 'Was removed 1 row.', 'Was removed @count rows.').' '.t('For users with not confirmed email, from %table table.', array('%table'=>'email_subscribe_readed_nodes')), 'warning');
  }
}

/**
 * Version 1.0.7
 */
function email_subscribe_update_7106() {
  if (module_exists('locale')) {
    locale_system_update(array('email_subscribe'));
  }
  
  drupal_set_message(t('You must configure the view type on the display control page of each type of material. Example link for "page" node type').': '.l(t('manage display'), 'admin/structure/types/manage/page/display'), 'warning');
}
